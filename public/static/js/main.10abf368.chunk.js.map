{"version":3,"sources":["components/NavBar.js","components/PlatformCard.js","pages/HomePage.js","pages/ExplorePage.js","pages/LoginPage.js","pages/SignUpPage.js","App.js","reportWebVitals.js","ApolloProvider.js","index.js"],"names":["Menu","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","PlatformCard","platform","name","platformID","creatorName","Card","style","width","Img","variant","src","Body","Title","Text","HomePage","FETCH_PLATFORMS_QUERY","gql","ExplorePage","useQuery","loading","platforms","data","getPlatforms","Container","Row","map","Col","LoginPage","REGISTER_USER","SignUpPage","useState","username","email","password","values","setValues","handleChange","event","target","value","useMutation","update","proxy","result","console","log","variables","addUser","Form","onSubmit","preventDefault","noValidate","Group","controlId","Control","type","placeholder","onChange","Button","App","NavBar","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.10abf368.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav, NavDropdown, Form, Button, FormControl} from 'react-bootstrap';\n\nfunction Menu() {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand href=\"/\">Brainiac</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      {/* <Nav.Link href=\"/\">Home</Nav.Link> */}\n      <Nav.Link href=\"explore\">Explore</Nav.Link>\n      <Nav.Link href=\"signup\">Sign Up</Nav.Link>\n      <Nav.Link href=\"login\">Log In</Nav.Link>\n      {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n      </NavDropdown> */}\n    </Nav>\n    {/* <Form inline>\n      <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n      <Button variant=\"outline-success\">Search</Button>\n    </Form> */}\n  </Navbar.Collapse>\n</Navbar>\n    )\n}\n\nexport default Menu;","import React from 'react';\nimport {Card, Button} from 'react-bootstrap'\n\n\nfunction PlatformCard({platform: {platformID, name, creatorName}}){\n    return (\n        <Card style={{ width: '18rem' }}>\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n            <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Card.Text>\n                    created by {creatorName}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default PlatformCard;","import React from 'react';\nimport PlatformCard from '../components/PlatformCard'\n\nfunction HomePage() {\n    return (\n        <div>\n            <h1>Home Page</h1>\n        </div>\n    );\n}\n\nexport default HomePage;","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client'\nimport PlatformCard from '../components/PlatformCard'\nimport {Container, Col, Row} from 'react-bootstrap'\n\n\nfunction ExplorePage() {\n    // console.log(useQuery(FETCH_PLATFORMS_QUERY));\n    const { loading, data: {getPlatforms: platforms}} = useQuery(FETCH_PLATFORMS_QUERY);\n    return (\n        <div>\n            <h1>Explore</h1>\n            \n            <Container>\n                <Row>{loading ? (<h1>Loading...</h1>) : (\n                    platforms && platforms.map((platform) =>(\n                        <Col > \n                            <PlatformCard platform={platform}/>\n                        </Col>\n                    ))\n                )}\n                </Row> \n            </Container>\n        </div>\n    );\n}\n\nconst FETCH_PLATFORMS_QUERY = gql`\n{\n    getPlatforms{\n        platformID name creatorName\n    }\n}   \n`;\n\nexport default ExplorePage;\n\n","import React from 'react';\n\nfunction LoginPage() {\n    return (\n        <div>\n            <h1>Login Page</h1>\n        </div>\n    );\n}\n\nexport default LoginPage;","import React, {useState} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag'\n\nfunction SignUpPage() {\n    const [values, setValues] = useState({\n        username:'',\n        email:'',\n        name:'',\n        password:''\n    })\n\n    const handleChange = (event) => {\n        setValues({...values, [event.target.name]: event.target.value});\n    }\n\n    const [addUser, {loading}] = useMutation(REGISTER_USER, {\n        update(proxy, result) {\n            console.log(result)\n        },\n        variables: {\n            username: values.username,\n            email: values.email,\n            name: values.name, \n            password: values.password\n        }\n    })\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addUser()\n    }\n\n    \n    return (\n        <div className=\"form-container\">\n            <h1>Sign Up Page</h1>\n            <p>Welcome to Brainiac! Sign up below to begin.</p>\n            <Form onSubmit={onSubmit} noValidate>\n                <Form.Group controlId=\"email\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control \n                    type=\"email\" \n                    placeholder=\"Email\" \n                    onChange = {handleChange}\n                    name = \"email\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"name\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\"  \n                    placeholder=\"Name\" \n                    onChange = {handleChange}\n                    name = \"name\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"username\">\n                    {/* <Form.Label>Email address</Form.Label> */}\n                    <Form.Control type=\"text\" \n                     placeholder=\"Username\" \n                     onChange = {handleChange}\n                     name = \"username\"/>\n                    {/* <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text> */}\n                </Form.Group>\n\n                <Form.Group controlId=\"password\">\n                    {/* <Form.Label>Password</Form.Label> */}\n                    <Form.Control type=\"password\" \n                    placeholder=\"Password\"\n                    onChange = {handleChange}\n                    name = \"password\"/>\n                </Form.Group>\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group> */}\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nconst REGISTER_USER = gql`\n    mutation createUser(\n        $username: String!\n        $email: String!\n        $name: String!\n        $password: String!\n    ) {\n        createUser(\n            username: $username\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            username\n            email\n            name\n            token\n        }\n    }\n`\n\nexport default SignUpPage;","import {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport HomePage from './pages/HomePage';\nimport ExplorePage from './pages/ExplorePage';\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Route exact path = '/' component = {HomePage}/>\n      <Route exact path = '/explore' component = {ExplorePage}/>\n      <Route exact path = '/login' component = {LoginPage}/>\n      <Route exact path = '/signup' component = {SignUpPage}/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport App from './App'\nimport {ApolloClient} from '@apollo/client'\nimport { InMemoryCache } from '@apollo/client'\nimport { createHttpLink } from '@apollo/client' \nimport {ApolloProvider} from '@apollo/client'\n\nconst httpLink = createHttpLink({\n    uri: 'http://localhost:5000/graphql'\n})\n\nconst client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache()\n})\n\nexport default (\n    <ApolloProvider client = {client}>\n        <App/>\n    </ApolloProvider>\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ApolloProvider from './ApolloProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(ApolloProvider, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}